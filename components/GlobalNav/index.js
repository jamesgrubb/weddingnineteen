import Link from 'next/link';
import Links from '../../utils/nav';
import styles from '../../styles/Nav.module.scss';
import { useRouter } from 'next/router';
import { useState, useEffect } from 'react';
import cx from 'classnames';
import React from 'react';

const LinkComponent = React.forwardRef(
	(
		{ as, children, href, replace, scroll, shadow, passHref, ...rest },
		ref
	) => (
		<Link as={as} href={href} passHref={passHref} replace={replace}>
			<a {...rest} ref={ref}>
				{children}
			</a>
		</Link>
	)
);

const GlobalNav = () => {
	const [scrolled, setScrolled] = useState(null);
	const [scrolling, isScrolling] = useState(false);
	const [mobileNavOpened, setMobileNavOpened] = useState(false);

	const handleIsScrolling = () => {};
	console.log(`mobileNavOpened`, mobileNavOpened);
	const handleScrollEvent = () => {
		const offset = window.scrollY;
		if (offset > 200) {
			setScrolled(true);
		} else {
			setScrolled(false);
		}
	};

	const router = useRouter();
	const activeRoute = router.asPath;

	useEffect(() => {
		window.addEventListener('scroll', handleScrollEvent);
		return () => window.removeEventListener('scroll', handleScrollEvent);
	}, [handleScrollEvent]);
	useEffect(() => {
		setMobileNavOpened(false);
	}, [activeRoute]);

	return (
		<>
			<nav
				className={
					scrolled ? cx(styles.nav, styles.navScrolling) : styles.nav
				}>
				<div className={styles.nav__content}>
					<LinkComponent
						href='/'
						className={styles.nav__logo}
						passHref>
						<svg
							width='92'
							height='27'
							viewBox='0 0 92 27'
							fill='none'
							xmlns='http://www.w3.org/2000/svg'>
							<path
								d='M0.958438 19.89C2.29044 19.674 3.64644 19.218 3.64644 17.202V10.122C3.64644 9.126 3.67044 8.61 3.75444 7.65H1.89444C1.97844 8.61 2.01444 9.126 2.01444 10.122V17.574C2.01444 18.918 1.77444 19.302 0.898438 19.746L0.958438 19.89ZM9.78106 7.65H7.82506C7.92106 7.962 7.90906 8.118 7.83706 8.418L5.72506 15.99C5.59306 16.434 5.54506 16.686 5.26906 17.25H5.67706C5.72506 16.71 5.82106 16.434 5.95306 15.978L6.56506 13.794H9.74506L10.3331 15.882C10.4891 16.434 10.5611 16.674 10.5971 17.25H12.6131C12.3611 16.782 12.2411 16.482 12.0731 15.882L9.78106 7.65ZM8.14906 8.07L9.68506 13.566H6.62506L8.14906 8.07ZM18.288 17.49L22.128 8.226V14.778C22.128 15.774 22.104 16.29 22.02 17.25H23.88C23.796 16.29 23.76 15.774 23.76 14.778V10.122C23.76 9.126 23.796 8.61 23.88 7.65H22.128L18.9 15.294L15.468 7.65H13.572C13.656 8.61 13.68 9.126 13.68 10.122V14.778C13.68 15.774 13.656 16.29 13.572 17.25H14.028C13.932 16.29 13.908 15.774 13.908 14.778V8.262L17.988 17.49H18.288ZM32.7843 17.25L33.1803 16.446C31.7043 16.95 30.9363 17.022 29.7123 17.022H28.5243V12.294H29.2323C29.8683 12.294 30.5163 12.294 31.6323 12.414V11.946C30.5163 12.066 29.8683 12.066 29.2323 12.066H28.5243V7.878H29.5803C30.1923 7.878 31.2723 7.962 32.2683 8.478L32.8923 7.65H26.7603C26.8563 8.61 26.8923 9.126 26.8923 10.122V14.778C26.8923 15.774 26.8563 16.29 26.7603 17.25H32.7843ZM37.8455 17.49C39.3695 17.49 40.6655 16.698 40.6655 15.042C40.6655 13.482 39.5495 12.726 37.3895 11.214C35.7815 10.098 35.1695 9.69 35.1695 8.862C35.1695 8.142 35.7575 7.638 36.7415 7.638C38.2895 7.638 38.9135 8.91 39.2015 10.17L40.4135 9.678C39.4415 8.118 38.3135 7.41 36.8255 7.41C35.3735 7.41 34.2455 8.106 34.2455 9.438C34.2455 10.698 35.0015 11.298 36.8375 12.618C38.7095 13.962 39.7415 14.634 39.7415 15.618C39.7415 16.698 39.0095 17.262 37.9535 17.262C36.3695 17.262 35.1935 15.798 34.8695 13.782L33.6575 14.43C34.6055 16.698 36.0215 17.49 37.8455 17.49Z'
								fill='black'
							/>
							<path
								d='M68.484 17.25C68.4 16.29 68.376 15.774 68.376 14.778V7.878H68.52C69.132 7.878 69.996 7.962 71.004 8.478L71.628 7.65H63.48L64.104 8.478C65.112 7.962 65.976 7.878 66.588 7.878H66.732V14.778C66.732 15.774 66.708 16.29 66.624 17.25H68.484ZM74.0348 17.25C73.9508 16.29 73.9268 15.774 73.9268 14.778V10.122C73.9268 9.126 73.9508 8.61 74.0348 7.65H72.1748C72.2588 8.61 72.2828 9.126 72.2828 10.122V14.778C72.2828 15.774 72.2588 16.29 72.1748 17.25H74.0348ZM76.0139 17.25C75.9299 16.29 75.9059 15.774 75.9059 14.778V8.142L75.9299 8.154L81.2219 17.25H83.1659C83.0699 16.29 83.0459 15.774 83.0459 14.778V10.122C83.0459 9.126 83.0699 8.61 83.1659 7.65H82.7339C82.8179 8.61 82.8539 9.126 82.8539 10.122V16.758L82.8299 16.746L77.5259 7.65H75.5939C75.6779 8.61 75.7019 9.126 75.7019 10.122V14.778C75.7019 15.774 75.6779 16.29 75.5939 17.25H76.0139ZM88.8837 7.65H86.9277C87.0237 7.962 87.0117 8.118 86.9397 8.418L84.8277 15.99C84.6957 16.434 84.6477 16.686 84.3717 17.25H84.7797C84.8277 16.71 84.9237 16.434 85.0557 15.978L85.6677 13.794H88.8477L89.4357 15.882C89.5917 16.434 89.6637 16.674 89.6997 17.25H91.7157C91.4637 16.782 91.3437 16.482 91.1757 15.882L88.8837 7.65ZM87.2517 8.07L88.7877 13.566H85.7277L87.2517 8.07Z'
								fill='black'
							/>
							<path
								d='M64.9351 21.2262C65.1877 24.6994 64.0195 26.2782 62.0934 26.2782C61.0198 26.2782 59.9779 25.7414 58.9359 24.8573C62.5986 22.1418 63.4195 16.7425 60.262 11.8484L59.3148 12.7957C62.4091 16.9951 61.8092 21.9524 58.5886 24.5415C57.294 23.2785 55.9363 21.4788 54.4523 19.3633C52.9051 17.1846 51.3264 14.9112 50.0949 12.6694C50.7896 12.2273 51.5158 11.7853 52.242 11.3432C56.031 9.03827 57.515 7.39637 57.515 4.68093C57.515 2.43911 55.9363 0.0709986 52.4315 0.0709986C48.8004 0.0709986 46.7796 2.47069 46.7796 5.50188C46.7796 7.68054 47.6952 10.175 49.1161 12.7641C46.748 14.3744 44.6009 16.3952 44.6009 19.6474C44.6009 24.4468 48.7372 26.5939 53.2524 26.5939C55.3364 26.5939 57.1361 26.0571 58.5254 25.1415C59.7253 26.0571 60.8935 26.5939 62.0934 26.5939C64.3352 26.5939 66.0402 25.2678 66.1981 21.8577L64.9351 21.2262ZM47.7268 5.50188C47.7268 2.59699 49.3371 0.386747 52.4315 0.386747C55.4942 0.386747 56.5678 2.56541 56.5678 4.68093C56.5678 7.14377 55.7153 8.69094 52.021 10.9643L49.8739 12.2589C48.6109 9.85921 47.7268 7.55425 47.7268 5.50188ZM53.2524 26.2782C48.6741 26.2782 45.5481 23.8469 45.5481 19.6474C45.5481 16.5531 47.1585 14.7533 49.3371 13.1746C50.537 15.3217 52.0526 17.5319 53.5997 19.6159C55.1785 21.7314 56.6625 23.5943 58.1781 24.8573C56.8835 25.7414 55.2101 26.2782 53.2524 26.2782Z'
								fill='#706F6F'
							/>
						</svg>
					</LinkComponent>

					<ul
						className={cx(
							styles.nav__items,
							mobileNavOpened ? styles.nav__itemsOpen : ''
						)}
						// style={
						// 	mobileNavOpened
						// 		? {
						// 				'--position': 'fixed',
						// 				'--menu-display': 'flex',
						// 		  }
						// 		: {
						// 				'--position': 'static',
						// 				'--menu-display': 'none',
						// 		  }
						// }
					>
						{Links.map((link, i) => {
							return (
								<li
									key={i}
									className={
										router.asPath === link.path
											? cx(
													styles.nav__item,
													styles.nav__itemActive
											  )
											: styles.nav__item
									}>
									<Link href={link.path}>{link.name}</Link>
								</li>
							);
						})}
					</ul>
					<button
						onClick={() => setMobileNavOpened(!mobileNavOpened)}
						className={styles.nav__toggle}>
						Menu
					</button>
				</div>
			</nav>
		</>
	);
};

export default GlobalNav;
